syntax = "proto3";

package peerbridge;

// Service definition for PeerBridge
service PeerBridgeService
{
    // RPC to get STUN information (public IP and port)
    rpc GetStunInfo (StunInfoRequest) returns (StunInfoResponse);
    // RPC to stop the process
    rpc StopProcess (StopProcessRequest) returns (StopProcessResponse);
    // RPC to start connection with peers
    rpc StartConnection (StartConnectionRequest) returns (StartConnectionResponse);
    // RPC to stop the current P2P connection
    rpc StopConnection (StopConnectionRequest) returns (StopConnectionResponse);
    // RPC to get connection status
    rpc GetConnectionStatus (GetConnectionStatusRequest) returns (GetConnectionStatusResponse);
}

// Connection status enum
enum ConnectionStatus
{
    IDLE = 0;
    CONNECTING = 1; 
    CONNECTED = 2;
    SHUTTING_DOWN = 3;
}

// Request message for GetStunInfo
message StunInfoRequest
{
    // No parameters needed
}

// Response message for GetStunInfo
message StunInfoResponse
{
    string public_ip = 1;
    int32 public_port = 2;
    bytes public_key = 3;
    string error_message = 4;
}

// Request message for StopProcess
message StopProcessRequest
{
    bool force = 1;
}

// Response message for StopProcess
message StopProcessResponse
{
    bool success = 1;
    string message = 2;
}

// Request message for StartConnection
message StartConnectionRequest {
    repeated string peer_info = 1;
    int32 self_index = 2;
    bool should_fail = 3;
}

// Response message for StartConnection
message StartConnectionResponse {
    bool success = 1;
    string error_message = 2;
}

// Request message for StopConnection
message StopConnectionRequest {
    // No parameters needed
}

// Response message for StopConnection
message StopConnectionResponse {
    bool success = 1;
    string message = 2;
}

// Request message for GetConnectionStatus
message GetConnectionStatusRequest {
    // No parameters needed
}

// Response message for GetConnectionStatus  
message GetConnectionStatusResponse {
    ConnectionStatus status = 1;
} 